---
layout: post
title:  "Welcome to Open-source Playbook"
date:   2018-01-31 20:54:29 +0500
---

# Open-source Enthusiast Playbook
## Chapters
- Выбери свою судьбу (Какую роль ты играешь в проекте?)
- Куда пойти? (Какой паттерн поведения тебе ближе всего?)
- Что в мешке? (Какая стадия зрелости и какие особенности у проекта?)
- Действуем (Какие действия можно предпринять?)
- Интроспекция (Получил ли ты удовольствие от процесса?)

## Intro
Любое приключение в мире open-source начинается с Проблемы. Она бываеет новой или уже в процессе
решения. Но вот Проблему не сформулированную в мире open-source ты не найдешь.
Так что перво-наперво сформулируй Проблемы с которыми бы ты хотел побороться, а еще лучше какие
тебе решить необходимо (например, по работе или для своего хобби).
Сформулировал?
Тогда собирайся в дорогу!

## Выбери свою судьбу (Какую роль ты играешь в проекте?)
Мы начинаем наше приключение в мире open-source. Выбери своего героя!
Для этого нужно выбрать его класс и уточнить особенности поведения.
Think about your relation to the problem. How much pain do you have with it? Maybe it's
just an interesting topic to try yourself?

Вот список классов (ролей):

---

### Spectator
  Он нашел проект (прочитал/услышал о нем) и заинтересовался проблемой которую проект
  решает. Он не сталкивался с тем, как решение применяется в реальном мире, все что
  он знает это доступная документация и статьи.
  Его путь - путь исследователя, он без страха ступает на тропы которых не видывал и
  впереди него идет его любопытство

### End-user
  Он пользуется проектом. Не важно по собственному желанию или просто так случилось.
  Он обладает знаниями о поведении решения в его конкретном случае.
  Его путь - путь достойного гражданина, который знает свои права и обязанности, он
  ответственно несет свою службу и верит в систему которой служит.

### Bug reporter
  Он пользуется или пользовался проектом и в процессе эксплуатации сталкнулся с
  непредвиденным для него поведением решения. Он не хочет держать это в себе, а
  хочет связаться с его разработчиками, поучаствовать в процессе создания решения.
  Его путь - путь доброго соседа, который поддержит добрым словом в трудную минуту и
  всегда готов дать искренний совет как решить проблему.

### Contributor
  Он нашел проблему в open-source проекте (например, баг или фичу) и хочет
  сам эту проблему решить в рамках проекта, потому что это интересно (ну и возможно,
  еще и НАДО по работе). Его путь - путь странника с чистым сердцем открытым для
  помощи другим, никто не знает как далеко он готов зайти в своих стремлениях.

### Maintainer
  Он ключевой разработчик open-source проекта, который занимается его созданием,
  поддержкой или развитием. Его путь - путь героя и изобретателя, на его пути большие
  жертвы и большие свершения.

## Куда пойти? (Какой паттерн поведения тебе ближе всего?)

### Innovation
### Tranding and Hype
### Refactoring and featuring
### Optimization and documation

## Что в мешке? (Какая стадия зрелости и какие особенности у проекта?)
Теперь нам надо найти где же начнется наше приключение. Для этого надо поискать Проекты которые
пытались Проблему решить с каким же Проектом нам по пути. Кстати, если Проект не нашелся - не
отчаивайся, еще не позно сыграть за Maintainer героя и начать свой собственный Проект.

А вот тебе подсказка как далеко зашло решение Проблемы твоим Проектом.

### Trigger
Focus - Implementation
### Hype
Focus - Docs
### Crystalization
Focus - Implementation, Docs
### Productivity
Focus - Docs, Implementation

Ну что ж, пришло время делать выбор. Какой Проект станет Твоим в этом приключении?

## Действуем (Какие действия можно предпринять?)

| Role\Maturtiy | Trigger (implementation)                                                                                                                                                                | Hype (docs)                                                                                                                                                      | Crystalization (implementations/docs)                                                                                                                                                                                                                                | Productivity (docs/implementations) |
|---------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------|
| Spectator     | Review the rational                                                                                                                                                                     | Review README,  Share the alternatives                                                                                                                           | Review source docs and requirements                                                                                                                                                                                                                                  | Review process documentation        |
| End-user      |                                                                                                                                                                                         |                                                                                                                                                                  |                                                                                                                                                                                                                                                                      |                                     |
| Bug Reporter  |                                                                                                                                                                                         |                                                                                                                                                                  |                                                                                                                                                                                                                                                                      |                                     |
| Contributor   |                                                                                                                                                                                         |                                                                                                                                                                  |                                                                                                                                                                                                                                                                      |                                     |
| Maintainer    | - Create working implementation - Write rationale behind solution - Write problem description & initial README - Verify solution with tests suite including at  least one real use case | - Write good README - Write posts - Talk at conferences - Collect reviews/issues - Sort out review/issues:  REQUIREMENTS and  OFFTOPIC (WILL NOT BE IMPLEMENTED) | - Huge source code changes (rewrite it better) - Write down requirements description - Write source code docs - Create a Wiki - Lower the unprocessed Issues - Improve code quality - Test coverage improvement - Tests automation improvement - Write optimizations |                                     |

## Интроспекция (Получил ли ты удовольствие от процесса?)
В конце нашего приключения перед тем как вернуться в свой уютный дом - здорово вспомнить все, что
произошло и задуматься, к какому приключению я буду готов в следующий раз?

Open-source development - это подход который объединяет людей со схожими интересами в поисках самых
лучших и оптимальных решений для самых разных проблем. Но при всей важности тех задач, что решает
open-source нельза забывать, что в отличие от любой другой problem solving деятельности - здесь
все строится на сознательности, любопытстве и энтузиазме. Решать задачи в сфере open-source не просто,
поэтому важно чтобы процесс всегда (или хотя бы по большей части) приносил удовольствие.

Ответь для себя на эти вопросы и помоги на последок проекту которым ты занимался стать более
доступным и открытым:
- Удалось ли мне завершить задуманное действие (начатое)? Если нет - то, из-за чего я решил
завершить работу?

- Чему я смог научиться и что нового узнал?

- Что мне не понравилось в процессе? Кто или что может сделать процесс лучше?

- Какие проблемы/конфликты были в коммуникации с участниками проекта?

- Хотел бы я повторить подобный опыт?

Сформулируй резюме из этих ответов в таком виде, чтобы это помогло другим участникам проекта.
И если ты доволен результатом - поделись им с другими участниками проекта, а
возможно, это еще и повод создать issue, для улучшения взаимодействия community проекта.
